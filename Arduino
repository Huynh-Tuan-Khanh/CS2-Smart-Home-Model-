#define LED1 2
#define LED2 3
#include <Servo.h>
#define FAN 4

Servo dongco1;
Servo dongco2;

int tempPin = A0;
float V0;
float R1 = 10000;
float logR2, R2, T, temp;
float c1 = 1.009249522e-03, c2 = 2.378405444e-04, c3 = 2.019202697e-07;
float tempC;
void setup() {
  // Initialize serial communication at 115200 baud rate (uncomment if needed)
  Serial.begin(115200);

  // Attach the servo to pin 9
  dongco1.attach(9);
  dongco2.attach(10);
  // Set LED pins as output
  pinMode(LED1, OUTPUT);
  pinMode(LED2, OUTPUT);
  pinMode(FAN, OUTPUT);
  pinMode(tempPin, INPUT);
}

void loop() {
  tempC = get_temp();
  Serial.print("Temperature: ");
  Serial.print(tempC);
  Serial.println(" C");
  delay(500);
  
  // Check if there is any data available from the serial port
  while (Serial.available() > 0) {
    // Read the incoming data as a string until the carriage return character
    String dulieuden = Serial.readStringUntil('\r');

    // Execute actions based on the received data
    if (dulieuden == "B1") {
      // Turn on both LEDs
        digitalWrite(LED1, HIGH);

    } else if (dulieuden == "T1") {
      // Turn off both LEDs
        digitalWrite(LED1, LOW);
     
    } else if (dulieuden == "B2") {
        digitalWrite(LED2, HIGH);

    }else if (dulieuden == "T2") {
       digitalWrite(LED2, LOW);
    }
      else if (dulieuden == "M1") {
      // Move the servo to 90 degrees
        dongco1.write(90);
    } else if (dulieuden == "D1") {
      // Move the servo to 0 degrees
        dongco1.write(0);
    } else if (dulieuden == "M2") {
      // Move the servo to 90 degrees
        dongco2.write(90);
    } else if (dulieuden == "D2") {
      // Move the servo to 0 degrees
        dongco2.write(0);
    }else if (dulieuden == "Q") {
      // Move the servo to 90 degrees
        digitalWrite(FAN, HIGH);
    } else if (dulieuden == "N") {
      // Move the servo to 0 degrees
        digitalWrite(FAN, LOW);
    }
  }
}
float get_temp(){
  V0 = analogRead(tempPin);
  R2 = R1 * (1023.0 / V0 - 1.0);
  logR2 = log(R2);
  T = (1.0 / (c1 + c2 * logR2 + c3 * logR2 * logR2 * logR2));
  return T - 273.15;
   
}
